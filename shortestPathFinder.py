from pathfinding.core.grid import Grid
from pathfinding.finder.a_star import AStarFinder

matrix = [
    ["#", "#", "#", "#", "#", "#", "#", "#", "#", "#", "#", "#", "#", "#", "#", "#", "#", "#", "#", "#", "#"],
    ["#", " ", " ", " ", " ", "#", " ", " ", "#", " ", "#", "#", "#", " ", "#", " ", " ", " ", " ", " ", "#"],
    ["#", " ", "#", " ", "#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#", "#", "#"],
    ["#", " ", " ", "#", "#", "#", "#", "#", " ", " ", " ", "#", " ", "#", "#", " ", " ", " ", "#", " ", "#"],
    ["#", "#", " ", "#", "#", "#", " ", " ", "#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"],
    ["#", " ", " ", " ", " ", "#", "#", " ", "#", " ", " ", "#", " ", " ", " ", " ", " ", " ", " ", " ", "#"],
    ["#", " ", "#", " ", "#", "#", " ", " ", "#", " ", "#", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"],
    ["#", " ", "#", " ", " ", " ", "#", " ", "#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"],
    ["#", " ", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", " ", "#", "#", "#", "#", "#", "#", " ", "#"],
    ["#", " ", " ", " ", " ", "#", " ", " ", " ", "#", "#", "#", "#", "#", "#", " ", " ", " ", " ", " ", "#"],
    ["#", " ", "#", " ", " ", " ", " ", "#", " ", " ", " ", " ", " ", " ", " ", "#", "#", " ", " ", " ", "#"],
    ["#", " ", "#", "#", "#", "#", " ", " ", " ", "#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"],
    ["#", " ", " ", " ", " ", "#", "#", "#", " ", " ", " ", " ", "#", " ", " ", " ", " ", " ", " ", " ", "#"],
    ["#", " ", " ", "#", "#", " ", " ", " ", " ", "#", "#", "#", " ", " ", " ", " ", " ", " ", " ", " ", "#"],
    ["#", " ", "#", " ", "#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#", "#", "#"],
    ["#", " ", " ", "#", "#", "#", "#", "#", " ", " ", " ", "#", " ", "#", "#", " ", " ", " ", "#", " ", "#"],
    ["#", "#", " ", "#", "#", "#", " ", " ", "#", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "#"],
    ["#", "#", "#", "#", "#", "#", "#", "#", "#", "#", "#", "#", "#", "#", "#", "#", "#", "#", "#", "#", "#"]
]

matrix_numeric = [[1 if cell == " " else 0 for cell in row] for row in matrix]

grid = Grid(matrix=matrix_numeric)
start = grid.node(1, 1)
end = grid.node(17, 16)  

finder = AStarFinder()
path, runs = finder.find_path(start, end, grid)


path_coords = [(node.x, node.y) for node in path]


def display_grid(matrix, path, start, end):
    path_set = set(path)
    for i in range(len(matrix)):
        row = []
        for j in range(len(matrix[i])):
            if (j, i) == start:
                row.append("X")
            elif (j, i) == end:
                row.append("O")
            elif (j, i) in path_set:
                row.append("*")
            else:
                row.append(matrix[i][j])
        print(" ".join(row))


display_grid(matrix, path_coords, (1, 1), (17, 16))